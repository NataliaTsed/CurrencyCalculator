import telebot
from config import TOKEN, keys
from exceptions import APIException, CurrencyCalculator

bot = telebot.TeleBot(TOKEN)


@bot.message_handler(commands=['start'])
def start(message: telebot.types.Message):
    text = '–î–ª—è –Ω–∞—á–∞–ª–∞ —Ä–∞–±–æ—Ç—ã –≤–≤–µ–¥–∏ –¥–∞–Ω–Ω—ã–µ —á–µ—Ä–µ–∑ –ø—Ä–æ–±–µ–ª –≤ —Å–ª–µ–¥—É—é—â–µ–º —Ñ–æ—Ä–º–∞—Ç–µ: \n' \
        ' \n1) –ù–∞–∑–≤–∞–Ω–∏–µ –≤–∞–ª—é—Ç—ã, —Ü–µ–Ω—É –∫–æ—Ç–æ—Ä—É—é —Ö–æ—á–µ—à—å —É–∑–Ω–∞—Ç—å;  \n2) –ù–∞–∑–≤–∞–Ω–∏–µ –≤–∞–ª—é—Ç—ã, –≤ –∫–æ—Ç–æ—Ä–æ–π —Ö–æ—á–µ—à—å —É–∑–Ω–∞—Ç—å ' \
           '—Ü–µ–Ω—É –ø–µ—Ä–≤–æ–π –≤–∞–ª—é—Ç—ã; \n3) –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø–µ—Ä–≤–æ–π –≤–∞–ª—é—Ç—ã.\n' \
           '\n–ü—Ä–∏–º–µ—Ä –≤–≤–æ–¥–∞ –∫–æ–Ω–≤–µ—Ä—Å–∏–∏ 100 –¥–æ–ª–ª–∞—Ä–æ–≤ –≤ –µ–≤—Ä–æ: –¥–æ–ª–ª–∞—Ä –µ–≤—Ä–æ 100 \n\
 \n–°–ø–∏—Å–æ–∫ –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –≤–∞–ª—é—Ç: /values'

    bot.send_message(message.chat.id, "–î–æ—Ä–æ–≥–æ–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å!ü§ó \n"
                                      "–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ —Ä—É–∫–∏ –ì—É—Ä—É –≤–∞–ª—é—Ç–Ω—ã—Ö –æ–ø–µ—Ä–∞—Ü–∏–π! üí± ")
    bot.send_sticker(message.chat.id, "CAACAgIAAxkBAAEJF4hkbhqTI295Ogk2ZGZQYwbUyFdccwAC2wADmL-ADTKdOUX4uisaLwQ")
    bot.reply_to(message, text)


@bot.message_handler(commands=['values'])
def values_def(message: telebot.types.Message):
    text = '–†–∞–¥ –ø—Ä–µ–¥–ª–æ–∂–∏—Ç—å —Å–ª–µ–¥—É—é—â–∏–µ –≤–∏–¥—ã –≤–∞–ª—é—Ç:'
    for key in keys.keys():
        text = '\n'.join((text, key,))
    bot.reply_to(message, text)

# base, quote, amount = message.text.split(' ')


@bot.message_handler(content_types=['text', ])
def get_price(message: telebot.types.Message):
    try:
        values = message.text.split(' ')

        if len(values) != 3:
            raise APIException('–¢—ã –≤–≤–µ–ª –º–Ω–æ–≥–æ –¥–∞–Ω–Ω—ã—Ö! –î–ª—è —Ä–∞—Å—á–µ—Ç–∞ –º–Ω–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –ª–∏—à—å 3 –∑–Ω–∞—á–µ–Ω–∏—è!')

        base, quote, amount = values
        total_base = CurrencyCalculator.get_price(base, quote, amount)
        if float(amount) == 0:
            raise APIException('–í–≤–µ–¥–∏ —Å—É–º–º—É –±–æ–ª—å—à–µ –Ω—É–ª—è! –ò–Ω–∞—á–µ —è –Ω–µ —Å–º–æ–≥—É —Ç–µ–±–µ –ø–æ–º–æ—á—å! :-)')
        if float(amount) <= 0:
            raise APIException('–í–≤–µ–¥–∏ –ø–æ–ª–æ–∂–∏—Ç–µ–ª—å–Ω–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ! –í –∫—Ä–µ–¥–∏—Ç –Ω–µ –º–µ–Ω—è—é! :-)')

    except APIException as e:
        bot.reply_to(message, f'–û—à–∏–±–∫–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è üò≥. \n{e}')

    except Exception as e:
        bot.reply_to(message, f'–ù–µ —É–¥–∞–ª–æ—Å—å –æ–±—Ä–∞–±–æ—Ç–∞—Ç—å –∫–æ–º–∞–Ω–¥—É üòµ‚Äçüí´\n{e}')
    else:
        text = f'–°—Ç–æ–∏–º–æ—Å—Ç—å {amount} {base} –≤ {quote}: {round(float(amount) / float(total_base), 2)}'
        bot.send_message(message.chat.id, text)
        bot.send_message(message.chat.id, '–° —Ç–æ–±–æ–π –ø—Ä–∏—è—Ç–Ω–æ –∏–º–µ—Ç—å –¥–µ–ª–æ! ü§ù')
        bot.send_message(message.chat.id, '–ë—É–¥—É –∂–¥–∞—Ç—å —Ç–µ–±—è –µ—â–µ! üëÄ')
        bot.send_sticker(message.chat.id, "CAACAgIAAxkBAAEJF5xkbiDrkPoQb-KvSF-HokVBpqefiAACyQADmL-ADZ3o05MJ4JudLwQ")


bot.polling(none_stop=True)
